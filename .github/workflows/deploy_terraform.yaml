name: Deploy Terraform with Approval

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:  # Permite ejecutar el workflow manualmente

permissions:
  contents: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: development  # Environment compartido para puntos de aprobación

    steps:
      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::891377079132:role/access-github-actions
          aws-region: ${{ vars.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -out=tfplan

      # Solicitud de aprobación manual antes del `apply`
      - name: Approval before Apply
        if: steps.plan.outcome == 'success'
        environment:
          name: development  # Usa el mismo environment para pedir aprobación
          url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

      # Terraform Apply solo se ejecuta tras aprobación en el environment
      - name: Terraform Apply
        if: success()
        run: terraform apply -auto-approve tfplan

      # Confirmación final sin referencias a pull request
      - name: Completion Notice
        run: echo 'Deployment completed successfully.'
